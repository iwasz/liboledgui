name: CMake gcc-12

on:
  push:
    branches: ["ciTests"]
  pull_request:
    branches: ["ciTests"]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

  # Does not work.
  CC: /usr/bin/gcc-12
  CXX: /usr/bin/g++-12

  OUT: doc/benchmark.csv

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - run: sudo apt update
      # - run: sudo apt search ninja
      - run: sudo apt install -yqq g++-12 cmake ninja-build time gnuplot
      # - run: find /usr -name 'g++-*'
      # - run: $CC --version | grep -Eo '[0-9]+\.[0-9]+\.[0-9]+'
      # - run: gnuplot

      - name: Build release
        run: |
          cmake -B ${{github.workspace}}/build/release -DCMAKE_BUILD_TYPE=Release -G Ninja -DCMAKE_CXX_COMPILER=/usr/bin/g++-12 -DCMAKE_C_COMPILER=/usr/bin/gcc-12
          /usr/bin/time -f%E -o release.time cmake --build ${{github.workspace}}/build/release --config Release --target benchmark

      - name: Build minSizeRel
        run: |
          cmake -B ${{github.workspace}}/build/minSizeRel -DCMAKE_BUILD_TYPE=MinSizeRel -G Ninja -DCMAKE_CXX_COMPILER=/usr/bin/g++-12 -DCMAKE_C_COMPILER=/usr/bin/gcc-12
          /usr/bin/time -f%E -o minSizeRel.time cmake --build ${{github.workspace}}/build/minSizeRel --config MinSizeRel --target benchmark

      - name: Test
        run: |
          echo -n $(size ${{github.workspace}}/build/release/benchmark | tail -n1 | awk -- 'BEGIN { FS=" "; } { print $1 "," $2 "," $3 "," $4 ","; }') >> $OUT
          echo -n $(cat release.time) >> $OUT
          echo -n "," >> $OUT
          echo -n $(size ${{github.workspace}}/build/minSizeRel/benchmark | tail -n1 | awk -- 'BEGIN { FS=" "; } { print $1 "," $2 "," $3 "," $4 ","; }') >> $OUT
          echo -n $(cat minSizeRel.time) >> $OUT
          echo -n "," >> $OUT
          echo -n $(date '+%s') >> $OUT
          echo -n "," >> $OUT
          echo -n $($CC --version | grep -Eo '[0-9]+\.[0-9]+\.[0-9]+') >> $OUT
          echo -n "," >> $OUT
          echo -n $GITHUB_SHA >> $OUT
          echo >> $OUT

      - name: Plot
        working-directory: doc
        run: |
          gnuplot -p binarySize.gnuplot
          ls -l binarySize.png
